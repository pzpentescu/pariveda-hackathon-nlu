type Supervisor @model @auth(rules: [{allow: public}]) {
  id: ID!
  SupervisorSocialWorkers: [SocialWorker] @connection(keyName: "bySupervisor", fields: ["id"])
  name: String
}

type SocialWorker @model @auth(rules: [{allow: public}]) @key(name: "bySupervisor", fields: ["supervisorID"]) {
  id: ID!
  name: String
  SocialWorkerChildren: [SocialWorkerChild] @connection(keyName: "bySocialWorker", fields: ["id"])
  supervisorID: ID
}

type SurveyQuestion @model @auth(rules: [{allow: public}]) @key(name: "bySurvey", fields: ["surveyID"]) {
  id: ID!
  question: String
  response: String
  surveyID: ID
}

type Survey @model @key(name: "byChild", fields: ["childID"]) @auth(rules: [{allow: public}]) {
  id: ID!
  childID: ID
  surveyType: String!
  surveyTime: AWSDateTime!
  note: [String]
  sentiment: Int
  artifactReferences: [String]
  SurveyQuestions: [SurveyQuestion] @connection(keyName: "bySurvey", fields: ["id"])
  complete: Boolean
}

type Child @model @auth(rules: [{allow: private, operations: [read, update]}, {allow: groups, groups: ["Administrators"], operations: [read, create, update, delete]}]) {
  id: ID!
  name: String!
  schoolName: String
  address: String
  birthdate: AWSDate
  active: Boolean
  Surveys: [Survey] @connection(keyName: "byChild", fields: ["id"])
  SocialWorkers: [SocialWorkerChild] @connection(keyName: "byChild", fields: ["id"])
}

type SocialWorkerChild @model(queries: null) @key(name: "byChild", fields: ["childID", "socialworkerID"]) @key(name: "bySocialWorker", fields: ["socialworkerID", "childID"]) @auth(rules: [{allow: private, operations: [read, update]}, {allow: groups, groups: ["Administrators"], operations: [read, create, update, delete]}, {allow: public}]) {
  id: ID!
  childID: ID!
  socialworkerID: ID!
  child: Child! @connection(fields: ["childID"])
  socialworker: SocialWorker! @connection(fields: ["socialworkerID"])
}
